plugins {
    id("io.micronaut.application") version "3.4.1"
    id("com.microsoft.azure.azurefunctions") version "1.8.2"
}

version = "0.1"
group = "example.micronaut"

repositories {
    mavenCentral()
}

dependencies {
    implementation("io.micronaut:micronaut-jackson-databind")
    runtimeOnly("ch.qos.logback:logback-classic")
    implementation("io.micronaut:micronaut-validation")
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    annotationProcessor("io.micronaut.data:micronaut-data-processor:3.4.3")
    implementation("io.micronaut.data:micronaut-data-hibernate-jpa:3.4.3")
    implementation("io.micronaut.sql:micronaut-hibernate-jpa")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    runtimeOnly("com.h2database:h2")
    implementation('jakarta.persistence:jakarta.persistence-api:3.1.0')

    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'
    testImplementation("io.micronaut:micronaut-http-client")

}


application {
    mainClass.set("example.micronaut.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("1.8")
    targetCompatibility = JavaVersion.toVersion("1.8")
}

tasks {
    azurefunctions {
        resourceGroup = "java-functions-group"
        appName = "azureCrudJava"
        pricingTier = "Consumption"
        region = "westus"
        runtime {
          os = "linux"
        }
        localDebug = "transport=dt_socket,server=y,suspend=n,address=5005"
}
}
graalvmNative.toolchainDetection = false
micronaut {
    runtime("azure_function")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("example.micronaut.*")
    }
}



